<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classhermes_1_1Vector3" kind="class" language="C++" prot="public">
    <compoundname>hermes::Vector3</compoundname>
    <derivedcompoundref refid="classhermes_1_1Vector3Quantity" prot="public" virt="non-virtual">Vector3Quantity&lt; T &gt;</derivedcompoundref>
    <includes refid="Vector3_8h" local="no">/home/andy/Projects/category_science/hermes/include/hermes/Vector3.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classhermes_1_1Vector3_1a9a4f74af87a76a4c3dcb729cb0e68f8d" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="34" column="3" bodyfile="include/hermes/Vector3.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhermes_1_1Vector3_1a1cb2b5ea04251d543e49356ef54eb853" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="34" column="5" bodyfile="include/hermes/Vector3.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhermes_1_1Vector3_1aa37b7ae12b900daed71297a80053aacf" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="34" column="7" bodyfile="include/hermes/Vector3.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhermes_1_1Vector3_1ac40804b7686a1152bcba217dfe5dde6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector3</definition>
        <argsstring>()</argsstring>
        <name>Vector3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="36" column="1" bodyfile="include/hermes/Vector3.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a1a9b03f3f26eb96dd218f6af2666dc2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Vector3</definition>
        <argsstring>(const Vector3&lt; U &gt; &amp;v)</argsstring>
        <name>Vector3</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; U &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="40" column="1" bodyfile="include/hermes/Vector3.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a001f5ea840d3559b1be051d24feb8d2b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector3</definition>
        <argsstring>(const double *v)</argsstring>
        <name>Vector3</name>
        <param>
          <type>const double *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="42" column="10" bodyfile="include/hermes/Vector3.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1aa4525619eba549ad564236d282854d46" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector3</definition>
        <argsstring>(const float *v)</argsstring>
        <name>Vector3</name>
        <param>
          <type>const float *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="44" column="10" bodyfile="include/hermes/Vector3.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1ac020e952cdb22f27b3a8ee41b4d11391" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector3</definition>
        <argsstring>(const T &amp;X, const T &amp;Y, const T &amp;Z)</argsstring>
        <name>Vector3</name>
        <param>
          <type>const T &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>Z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="46" column="10" bodyfile="include/hermes/Vector3.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a2279d31428b5d6b93a83bf4c9f68e564" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector3</definition>
        <argsstring>(T t)</argsstring>
        <name>Vector3</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="48" column="10" bodyfile="include/hermes/Vector3.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a153a1fb09ed13dcce06a10cd3b7beeba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void setX</definition>
        <argsstring>(const T X)</argsstring>
        <name>setX</name>
        <param>
          <type>const T</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="50" column="14" bodyfile="include/hermes/Vector3.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1aed5390936e9bb337bc3065857ab14e44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void setY</definition>
        <argsstring>(const T Y)</argsstring>
        <name>setY</name>
        <param>
          <type>const T</type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="52" column="14" bodyfile="include/hermes/Vector3.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a3ab3d5a5a1cf8238684ebbefb85d9d0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void setZ</definition>
        <argsstring>(const T Z)</argsstring>
        <name>setZ</name>
        <param>
          <type>const T</type>
          <declname>Z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="54" column="14" bodyfile="include/hermes/Vector3.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1abab70462d94a1c286ed847b670fbd4ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void setXYZ</definition>
        <argsstring>(const T X, const T Y, const T Z)</argsstring>
        <name>setXYZ</name>
        <param>
          <type>const T</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>Z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="56" column="14" bodyfile="include/hermes/Vector3.h" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a15e1e106e705d468ef583b9949cf6eb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void setR</definition>
        <argsstring>(const T r)</argsstring>
        <name>setR</name>
        <param>
          <type>const T</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="62" column="14" bodyfile="include/hermes/Vector3.h" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1ada7f26da45a0d7ea09877dac7dc7737e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setRThetaPhi</definition>
        <argsstring>(const T r, const QAngle theta, const QAngle phi)</argsstring>
        <name>setRThetaPhi</name>
        <param>
          <type>const T</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehermes_1_1units_1af3e07db6a1feb6f96f20e33589215d40" kindref="member">QAngle</ref></type>
          <declname>theta</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehermes_1_1units_1af3e07db6a1feb6f96f20e33589215d40" kindref="member">QAngle</ref></type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="68" column="6" bodyfile="include/hermes/Vector3.h" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1adf2f99da90afb3437aedde8cd7eed840" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T getX</definition>
        <argsstring>() const</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="74" column="3" bodyfile="include/hermes/Vector3.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a482cf1611ceafdedc1562a481d245634" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T getY</definition>
        <argsstring>() const</argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="76" column="3" bodyfile="include/hermes/Vector3.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a573409a1444c03213418c57e7687ab92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T getZ</definition>
        <argsstring>() const</argsstring>
        <name>getZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="78" column="3" bodyfile="include/hermes/Vector3.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a7bd493142f998ab21fc3f5f92a897e48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T getR</definition>
        <argsstring>() const</argsstring>
        <name>getR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="81" column="3" bodyfile="include/hermes/Vector3.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1ace8d107361a8c2b9e84bbbb4939bb721" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T getR2</definition>
        <argsstring>() const</argsstring>
        <name>getR2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="84" column="3" bodyfile="include/hermes/Vector3.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a258ddf29b41d80b68f1e7a420c16b15e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T getRho</definition>
        <argsstring>() const</argsstring>
        <name>getRho</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="86" column="3" bodyfile="include/hermes/Vector3.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a3303b4f29fdfbdf39d1791e62b00337b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacehermes_1_1units_1af3e07db6a1feb6f96f20e33589215d40" kindref="member">QAngle</ref></type>
        <definition>QAngle getPhi</definition>
        <argsstring>() const</argsstring>
        <name>getPhi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="89" column="8" bodyfile="include/hermes/Vector3.h" bodystart="89" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1abd9a0342bed932370f307629a5b5e845" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacehermes_1_1units_1af3e07db6a1feb6f96f20e33589215d40" kindref="member">QAngle</ref></type>
        <definition>QAngle getTheta</definition>
        <argsstring>() const</argsstring>
        <name>getTheta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="98" column="8" bodyfile="include/hermes/Vector3.h" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a43e9613d2713ef4f646dcfefcb8c9f36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; getUnitVector</definition>
        <argsstring>() const</argsstring>
        <name>getUnitVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="107" column="9" bodyfile="include/hermes/Vector3.h" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1aeb648b2e2879e4518ee3ae30a4929661" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; getUnitVectorTheta</definition>
        <argsstring>() const</argsstring>
        <name>getUnitVectorTheta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="110" column="9" bodyfile="include/hermes/Vector3.h" bodystart="110" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a5daa539ea07b55ce676d48bee56ff8e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; getUnitVectorPhi</definition>
        <argsstring>() const</argsstring>
        <name>getUnitVectorPhi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="118" column="9" bodyfile="include/hermes/Vector3.h" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1ab3e80f13e1fdb2d7c64f388052879d01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacehermes_1_1units_1af3e07db6a1feb6f96f20e33589215d40" kindref="member">QAngle</ref></type>
        <definition>QAngle getAngleTo</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v) const</argsstring>
        <name>getAngleTo</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="123" column="8" bodyfile="include/hermes/Vector3.h" bodystart="123" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a3a34e398a5f4e79903b52f5614e38c36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isParallelTo</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v, QAngle maxAngle) const</argsstring>
        <name>isParallelTo</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="namespacehermes_1_1units_1af3e07db6a1feb6f96f20e33589215d40" kindref="member">QAngle</ref></type>
          <declname>maxAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="137" column="6" bodyfile="include/hermes/Vector3.h" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a95adaea667f7e8001705b616b850c4e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T getDistanceTo</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;point) const</argsstring>
        <name>getDistanceTo</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="142" column="3" bodyfile="include/hermes/Vector3.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1ad54610a507023d3701395a2065d12227" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; getParallelTo</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v) const</argsstring>
        <name>getParallelTo</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="149" column="9" bodyfile="include/hermes/Vector3.h" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1afd1e615641128549e73ec8db505a4842" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; getPerpendicularTo</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v) const</argsstring>
        <name>getPerpendicularTo</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="157" column="9" bodyfile="include/hermes/Vector3.h" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a3ec656a746b7889c8dfc186d36033523" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; getRotated</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;axis, T angle) const</argsstring>
        <name>getRotated</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>T</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="163" column="9" bodyfile="include/hermes/Vector3.h" bodystart="163" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a777823f1659ea229eed30c66853d9817" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; clip</definition>
        <argsstring>(T lower, T upper) const</argsstring>
        <name>clip</name>
        <param>
          <type>T</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>T</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="177" column="9" bodyfile="include/hermes/Vector3.h" bodystart="177" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a43d0de968c3105210371008f74b643d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; abs</definition>
        <argsstring>() const</argsstring>
        <name>abs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="186" column="9" bodyfile="include/hermes/Vector3.h" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a0e74eaf3969894103426c152a8c0cc13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; floor</definition>
        <argsstring>() const</argsstring>
        <name>floor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="191" column="9" bodyfile="include/hermes/Vector3.h" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a0a667edd2b60f3cb300d1dc0986492d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; ceil</definition>
        <argsstring>() const</argsstring>
        <name>ceil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="196" column="9" bodyfile="include/hermes/Vector3.h" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1aba0c82b2b19f36bc196f6192e9d93b10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T min</definition>
        <argsstring>() const</argsstring>
        <name>min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="201" column="3" bodyfile="include/hermes/Vector3.h" bodystart="201" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1ac8a2015ba65ce6e14ca1a3541eb6fb5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T max</definition>
        <argsstring>() const</argsstring>
        <name>max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="204" column="3" bodyfile="include/hermes/Vector3.h" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a8294bc60a295c5a1db9b616dd5641b65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T dot</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v) const</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="207" column="3" bodyfile="include/hermes/Vector3.h" bodystart="207" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a4ade57accbadeae4dcfe2fa0527bbd92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; cross</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v) const</argsstring>
        <name>cross</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="210" column="9" bodyfile="include/hermes/Vector3.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a14fa3f4b6901e6527c1c06ab8f5a41a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="216" column="6" bodyfile="include/hermes/Vector3.h" bodystart="216" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1aae8c58d16e161033e0aa7d51fb49ba0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; operator+</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="223" column="9" bodyfile="include/hermes/Vector3.h" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1ad9780a8a30debce3563405e68e42f2e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; operator+</definition>
        <argsstring>(const T &amp;f) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const T &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="227" column="9" bodyfile="include/hermes/Vector3.h" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a77798bc220a5645dfe5339c8f05431ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; operator-</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="231" column="9" bodyfile="include/hermes/Vector3.h" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1ab7c0d3499a990f050b1a0282e22c048d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; operator-</definition>
        <argsstring>(const T &amp;f) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const T &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="235" column="9" bodyfile="include/hermes/Vector3.h" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a0fc8d7c964ca22cb2070e9506a3c6719" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; operator*</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="240" column="9" bodyfile="include/hermes/Vector3.h" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a7896fe3ebc9ca649edbe287c4a74719f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; operator*</definition>
        <argsstring>(const T &amp;v) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="244" column="9" bodyfile="include/hermes/Vector3.h" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a6020630509bc3e6b54f76281ddea908b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; operator/</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="249" column="9" bodyfile="include/hermes/Vector3.h" bodystart="249" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a02f6902653fa61da3ad1f08c1561e944" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; operator/</definition>
        <argsstring>(const T &amp;f) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const T &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="253" column="9" bodyfile="include/hermes/Vector3.h" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1af4edc8bf5fa02e56c7a81df1744285ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; operator%</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v) const</argsstring>
        <name>operator%</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="258" column="9" bodyfile="include/hermes/Vector3.h" bodystart="258" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a91e50ed5d4acdc4f542e836a4668f495" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; operator%</definition>
        <argsstring>(const T &amp;f) const</argsstring>
        <name>operator%</name>
        <param>
          <type>const T &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="262" column="9" bodyfile="include/hermes/Vector3.h" bodystart="262" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a9f3c389e7cf95a18197570b79a3da715" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator-=</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="266" column="9" bodyfile="include/hermes/Vector3.h" bodystart="266" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a77d4da531fadb6f866e008eff62a50ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator-=</definition>
        <argsstring>(const T &amp;f)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const T &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="273" column="9" bodyfile="include/hermes/Vector3.h" bodystart="273" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a965818eecfc2c98ea8c2ee94b706955b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator+=</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="280" column="9" bodyfile="include/hermes/Vector3.h" bodystart="280" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1abf7f3b1c87c01f1791db165b5967bfcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator+=</definition>
        <argsstring>(const T &amp;f)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const T &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="287" column="9" bodyfile="include/hermes/Vector3.h" bodystart="287" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a32d25719468b31d8a22593b7f455e7ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator*=</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="295" column="9" bodyfile="include/hermes/Vector3.h" bodystart="295" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1aaa0aab67a156eb904963b80e0c978516" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator*=</definition>
        <argsstring>(const T &amp;f)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const T &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="302" column="9" bodyfile="include/hermes/Vector3.h" bodystart="302" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a9764f7440c06f57db2b55f04dc5237bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator/=</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="310" column="9" bodyfile="include/hermes/Vector3.h" bodystart="310" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a9291ad7d5804fe415be4f9a879576bbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator/=</definition>
        <argsstring>(const T &amp;f)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const T &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="317" column="9" bodyfile="include/hermes/Vector3.h" bodystart="317" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a279d4d576d6cdde1772483178a313ced" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator%=</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v)</argsstring>
        <name>operator%=</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="325" column="9" bodyfile="include/hermes/Vector3.h" bodystart="325" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a2cc76259cd74e8dd6195254ace7e0600" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator%=</definition>
        <argsstring>(const T &amp;f)</argsstring>
        <name>operator%=</name>
        <param>
          <type>const T &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="332" column="9" bodyfile="include/hermes/Vector3.h" bodystart="332" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a123fc2a5b1b816a66772db09ccd550d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator=</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="339" column="9" bodyfile="include/hermes/Vector3.h" bodystart="339" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classhermes_1_1Vector3_1a9ff1f60b6164cad6eeb64ea0510e248d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhermes_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
        <definition>Vector3&lt;T&gt;&amp; operator=</definition>
        <argsstring>(const T &amp;f)</argsstring>
        <name>operator=</name>
        <param>
          <type>const T &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hermes/Vector3.h" line="346" column="9" bodyfile="include/hermes/Vector3.h" bodystart="346" bodyend="351"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Template class for 3-vectors of type float, double, ... </para>
    </briefdescription>
    <detaileddescription>
<para>Allows accessing and changing the elements x, y, z directly or through the corresponding get and set methods.</para>
<para>Angle definitions are phi [-pi, pi]: azimuthal angle in the x-y plane, 0 pointing in x-direction theta [0, pi]: zenith angle towards the z axis, 0 pointing in z-direction </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Vector3&lt; T &gt;</label>
        <link refid="classhermes_1_1Vector3"/>
      </node>
      <node id="2">
        <label>Vector3Quantity&lt; T &gt;</label>
        <link refid="classhermes_1_1Vector3Quantity"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/hermes/Vector3.h" line="32" column="14" bodyfile="include/hermes/Vector3.h" bodystart="32" bodyend="352"/>
    <listofallmembers>
      <member refid="classhermes_1_1Vector3_1a43d0de968c3105210371008f74b643d1" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>abs</name></member>
      <member refid="classhermes_1_1Vector3_1a0a667edd2b60f3cb300d1dc0986492d7" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>ceil</name></member>
      <member refid="classhermes_1_1Vector3_1a777823f1659ea229eed30c66853d9817" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>clip</name></member>
      <member refid="classhermes_1_1Vector3_1a4ade57accbadeae4dcfe2fa0527bbd92" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>cross</name></member>
      <member refid="classhermes_1_1Vector3_1a8294bc60a295c5a1db9b616dd5641b65" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>dot</name></member>
      <member refid="classhermes_1_1Vector3_1a0e74eaf3969894103426c152a8c0cc13" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>floor</name></member>
      <member refid="classhermes_1_1Vector3_1ab3e80f13e1fdb2d7c64f388052879d01" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getAngleTo</name></member>
      <member refid="classhermes_1_1Vector3_1a95adaea667f7e8001705b616b850c4e4" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getDistanceTo</name></member>
      <member refid="classhermes_1_1Vector3_1ad54610a507023d3701395a2065d12227" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getParallelTo</name></member>
      <member refid="classhermes_1_1Vector3_1afd1e615641128549e73ec8db505a4842" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getPerpendicularTo</name></member>
      <member refid="classhermes_1_1Vector3_1a3303b4f29fdfbdf39d1791e62b00337b" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getPhi</name></member>
      <member refid="classhermes_1_1Vector3_1a7bd493142f998ab21fc3f5f92a897e48" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getR</name></member>
      <member refid="classhermes_1_1Vector3_1ace8d107361a8c2b9e84bbbb4939bb721" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getR2</name></member>
      <member refid="classhermes_1_1Vector3_1a258ddf29b41d80b68f1e7a420c16b15e" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getRho</name></member>
      <member refid="classhermes_1_1Vector3_1a3ec656a746b7889c8dfc186d36033523" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getRotated</name></member>
      <member refid="classhermes_1_1Vector3_1abd9a0342bed932370f307629a5b5e845" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getTheta</name></member>
      <member refid="classhermes_1_1Vector3_1a43e9613d2713ef4f646dcfefcb8c9f36" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getUnitVector</name></member>
      <member refid="classhermes_1_1Vector3_1a5daa539ea07b55ce676d48bee56ff8e1" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getUnitVectorPhi</name></member>
      <member refid="classhermes_1_1Vector3_1aeb648b2e2879e4518ee3ae30a4929661" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getUnitVectorTheta</name></member>
      <member refid="classhermes_1_1Vector3_1adf2f99da90afb3437aedde8cd7eed840" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getX</name></member>
      <member refid="classhermes_1_1Vector3_1a482cf1611ceafdedc1562a481d245634" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getY</name></member>
      <member refid="classhermes_1_1Vector3_1a573409a1444c03213418c57e7687ab92" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>getZ</name></member>
      <member refid="classhermes_1_1Vector3_1a3a34e398a5f4e79903b52f5614e38c36" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>isParallelTo</name></member>
      <member refid="classhermes_1_1Vector3_1ac8a2015ba65ce6e14ca1a3541eb6fb5c" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>max</name></member>
      <member refid="classhermes_1_1Vector3_1aba0c82b2b19f36bc196f6192e9d93b10" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>min</name></member>
      <member refid="classhermes_1_1Vector3_1af4edc8bf5fa02e56c7a81df1744285ec" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator%</name></member>
      <member refid="classhermes_1_1Vector3_1a91e50ed5d4acdc4f542e836a4668f495" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator%</name></member>
      <member refid="classhermes_1_1Vector3_1a279d4d576d6cdde1772483178a313ced" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator%=</name></member>
      <member refid="classhermes_1_1Vector3_1a2cc76259cd74e8dd6195254ace7e0600" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator%=</name></member>
      <member refid="classhermes_1_1Vector3_1a0fc8d7c964ca22cb2070e9506a3c6719" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator*</name></member>
      <member refid="classhermes_1_1Vector3_1a7896fe3ebc9ca649edbe287c4a74719f" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator*</name></member>
      <member refid="classhermes_1_1Vector3_1a32d25719468b31d8a22593b7f455e7ba" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator*=</name></member>
      <member refid="classhermes_1_1Vector3_1aaa0aab67a156eb904963b80e0c978516" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator*=</name></member>
      <member refid="classhermes_1_1Vector3_1aae8c58d16e161033e0aa7d51fb49ba0c" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator+</name></member>
      <member refid="classhermes_1_1Vector3_1ad9780a8a30debce3563405e68e42f2e5" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator+</name></member>
      <member refid="classhermes_1_1Vector3_1a965818eecfc2c98ea8c2ee94b706955b" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator+=</name></member>
      <member refid="classhermes_1_1Vector3_1abf7f3b1c87c01f1791db165b5967bfcd" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator+=</name></member>
      <member refid="classhermes_1_1Vector3_1a77798bc220a5645dfe5339c8f05431ba" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator-</name></member>
      <member refid="classhermes_1_1Vector3_1ab7c0d3499a990f050b1a0282e22c048d" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator-</name></member>
      <member refid="classhermes_1_1Vector3_1a9f3c389e7cf95a18197570b79a3da715" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator-=</name></member>
      <member refid="classhermes_1_1Vector3_1a77d4da531fadb6f866e008eff62a50ef" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator-=</name></member>
      <member refid="classhermes_1_1Vector3_1a6020630509bc3e6b54f76281ddea908b" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator/</name></member>
      <member refid="classhermes_1_1Vector3_1a02f6902653fa61da3ad1f08c1561e944" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator/</name></member>
      <member refid="classhermes_1_1Vector3_1a9764f7440c06f57db2b55f04dc5237bb" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator/=</name></member>
      <member refid="classhermes_1_1Vector3_1a9291ad7d5804fe415be4f9a879576bbd" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator/=</name></member>
      <member refid="classhermes_1_1Vector3_1a123fc2a5b1b816a66772db09ccd550d5" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator=</name></member>
      <member refid="classhermes_1_1Vector3_1a9ff1f60b6164cad6eeb64ea0510e248d" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator=</name></member>
      <member refid="classhermes_1_1Vector3_1a14fa3f4b6901e6527c1c06ab8f5a41a1" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>operator==</name></member>
      <member refid="classhermes_1_1Vector3_1a15e1e106e705d468ef583b9949cf6eb7" prot="public" virt="virtual"><scope>hermes::Vector3</scope><name>setR</name></member>
      <member refid="classhermes_1_1Vector3_1ada7f26da45a0d7ea09877dac7dc7737e" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>setRThetaPhi</name></member>
      <member refid="classhermes_1_1Vector3_1a153a1fb09ed13dcce06a10cd3b7beeba" prot="public" virt="virtual"><scope>hermes::Vector3</scope><name>setX</name></member>
      <member refid="classhermes_1_1Vector3_1abab70462d94a1c286ed847b670fbd4ba" prot="public" virt="virtual"><scope>hermes::Vector3</scope><name>setXYZ</name></member>
      <member refid="classhermes_1_1Vector3_1aed5390936e9bb337bc3065857ab14e44" prot="public" virt="virtual"><scope>hermes::Vector3</scope><name>setY</name></member>
      <member refid="classhermes_1_1Vector3_1a3ab3d5a5a1cf8238684ebbefb85d9d0a" prot="public" virt="virtual"><scope>hermes::Vector3</scope><name>setZ</name></member>
      <member refid="classhermes_1_1Vector3_1ac40804b7686a1152bcba217dfe5dde6f" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>Vector3</name></member>
      <member refid="classhermes_1_1Vector3_1a1a9b03f3f26eb96dd218f6af2666dc2d" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>Vector3</name></member>
      <member refid="classhermes_1_1Vector3_1a001f5ea840d3559b1be051d24feb8d2b" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>Vector3</name></member>
      <member refid="classhermes_1_1Vector3_1aa4525619eba549ad564236d282854d46" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>Vector3</name></member>
      <member refid="classhermes_1_1Vector3_1ac020e952cdb22f27b3a8ee41b4d11391" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>Vector3</name></member>
      <member refid="classhermes_1_1Vector3_1a2279d31428b5d6b93a83bf4c9f68e564" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>Vector3</name></member>
      <member refid="classhermes_1_1Vector3_1a9a4f74af87a76a4c3dcb729cb0e68f8d" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>x</name></member>
      <member refid="classhermes_1_1Vector3_1a1cb2b5ea04251d543e49356ef54eb853" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>y</name></member>
      <member refid="classhermes_1_1Vector3_1aa37b7ae12b900daed71297a80053aacf" prot="public" virt="non-virtual"><scope>hermes::Vector3</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
